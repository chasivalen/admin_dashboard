"""empty message

Revision ID: 0c764f3b377c
Revises: 
Create Date: 2025-08-20 21:52:35.843195

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '0c764f3b377c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('METRIC_TYPE', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('METRIC_NAME', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('METRIC_DEF', sa.Text(), nullable=True),
    sa.Column('METRIC_NOTES', sa.Text(), nullable=True),
    sa.Column('GENAI_IND', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('MT_LLM_IND', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('SCORE_TYPE', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('EVAL_TYPE', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('EVAL_TYPE_DETAIL', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('CONTENT_TYPE', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('STATUS_IND', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('CREATE_DT', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('MODIFIED_DT', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('metric', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_metric_METRIC_NAME'), ['METRIC_NAME'], unique=False)
        batch_op.create_index(batch_op.f('ix_metric_METRIC_TYPE'), ['METRIC_TYPE'], unique=False)

    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_organization_name'), ['name'], unique=True)

    op.create_table('readmeinstruction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('README_TITLE', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('README_TXT', sa.Text(), nullable=True),
    sa.Column('SCORE_TYPE', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('EVAL_TYPE', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('PRE_EVAL_CONTEXT', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('CONTENT_TYPE', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('STATUS_IND', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('DEFAULT_IND', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('CUSTOM_IND', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('CREATE_DT', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('MODIFIED_DT', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('readmeinstruction', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_readmeinstruction_README_TITLE'), ['README_TITLE'], unique=False)

    op.create_table('template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('variables', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('evaluation_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('configuration', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('results', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluationmetric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('evaluation_id', sa.Integer(), nullable=True),
    sa.Column('metric_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['evaluation_id'], ['evaluation.id'], ),
    sa.ForeignKeyConstraint(['metric_id'], ['metric.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('evaluationmetric')
    op.drop_table('evaluation')
    op.drop_table('project')
    op.drop_table('template')
    with op.batch_alter_table('readmeinstruction', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_readmeinstruction_README_TITLE'))

    op.drop_table('readmeinstruction')
    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_organization_name'))

    op.drop_table('organization')
    with op.batch_alter_table('metric', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_metric_METRIC_TYPE'))
        batch_op.drop_index(batch_op.f('ix_metric_METRIC_NAME'))

    op.drop_table('metric')
    # ### end Alembic commands ###
